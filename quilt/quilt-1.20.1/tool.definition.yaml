templates:
  - template: tool.java.ftl
    name: "@SRCROOT/@BASEPACKAGEPATH/item/@NAMEItem.java"
  - template: json/tool.json.ftl
    writer: json
    condition: "renderType #= 0"
    name: "@MODASSETSROOT/models/item/@registryname.json"
  - template: json/handheld_rod.json.ftl
    writer: json
    condition:
      - "renderType #= 0"
      - "toolType %= Fishing rod"
    name: "@MODASSETSROOT/models/item/@registryname.json"
  - template: json/item_cmodel.json.ftl
    writer: json
    condition: "renderType #= 1"
    name: "@MODASSETSROOT/models/item/@registryname.json"
  - template: json/item_model_blocking.json.ftl
    writer: json
    condition: "toolType %= Shield"
    name: "@MODASSETSROOT/models/item/@registryname_0.json"


global_templates:
  - template: mixins/fishhookmixin.java.ftl
    writer: java
    condition: "${w.getGElementsOfType('tool')?filter(e -> e.toolType = 'Fishing rod')?size != 0}"
    deleteWhenConditionFalse: true
    name: "@SRCROOT/@BASEPACKAGEPATH/mixins/@JavaModNameFishingHookMixin.java"
  - template: mixins/fishhookrenderermixin.java.ftl
    writer: java
    condition: "${w.getGElementsOfType('tool')?filter(e -> e.toolType = 'Fishing rod')?size != 0}"
    deleteWhenConditionFalse: true
    name: "@SRCROOT/@BASEPACKAGEPATH/mixins/@JavaModNameFishingHookRendererMixin.java"
  - template: mixins/entitymixin.java.ftl
    writer: java
    condition: "${w.getGElementsOfType('tool')?filter(e -> e.toolType = 'Fishing rod')?size != 0}"
    deleteWhenConditionFalse: true
    name: "@SRCROOT/@BASEPACKAGEPATH/mixins/EntityMixin.java"

localizationkeys:
  - key: item.@modid.@registryname
    mapto: name

field_exclusions: [ onEntitySwing ]